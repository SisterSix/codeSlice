1. 数据库中要有对该表记录的排序字段

2. momnet.js和webkit 浏览器内核有兼容问题, moment.js无法正常工作在webkit环境下


3. datatable控件在导出Excel后, 会导致大数的精度丢失

4. Jdo.get()必须放在try(A){}catch(Exception e ){} 的 A 处, 否则会导致资源非正常关闭, 然后导致服务器卡死

5. 目前项目中训练计划/德育教育/规章制度/文化课教案/实验课教案/等等/ 用一张表即可解决, 虽然用到的字段不尽相同, 然而这是一个收敛的数据集合, 一个表中
虽然会有一些字段为空, 但是目前的数据库存储对此作了优化, 这种现象对此并没有太多影响
   -- 在读数据库的时候 这些数据存在磁盘的一个连续单元里和不同的单元里 也会对数据库的性能有影响. 这就是磁盘碎片整理的意义 ,  可以加快资源的访问速度,
   不仅仅是数据库. 一些DBA 又是会将一些表先dump 然后truncate 然后再导入 目的也是如此
   
6. 对一个项目的组成思考
            -- 开发环境 
                      - 操作系统的选择 如果不是开发微软系列产品, 还是在MAC 或者Linux 下开发,对环境的掌控比较方便,现在即使是微软的
                        产品,也可以用MAC 或者Linux 开发了,好讽刺~
                      - IDE 时间很长没用过Eclipse了, Idea 用起来舒服许多, 总的思路还是顺应潮流, 用自己习惯的, 给自己留出尽可能多的时间
                        来思考代码或业务, 并不是来花时间在代码或业务之外.更专注~
            -- IDE   
                      - DependenceManagement Maven/Gradle
                      
                      - VersionControl Git
                      
                      - Serverlet 容器 Jetty
                      
                      - JS/CSS 压缩 gulp
                      
                      - Plugins vim .gitignor
                      
                      - 快捷键 command+e, command+w, command+shift+f ...
                      
                      - Live Template 写自己常用代码块 
                      
                      - 常用常量类 常用工具类 这些在所有项目中可以通用,并且更新速度不快,也是一个收敛的过程,越写越多,但需要写的越来越少
                      
             -- 项目  
                      - 前端UE 更少的操作,给精准的结果反馈
                      
                      - htpp请求 尽量少的和服务器交互
                      
                      - 请求分发 SpringMVC 层
                      
                      - 权限控制 用户有没有权限访问某个requstmaping
                      
                      - controller service dao 
                      
                      - 日志系统 系统级 业务代码级
                      
                      - 测试系统 
                      
                      - 缓存系统
                      
                      - 项目约定 命名(前后缀) 分类约定 定时重构约定 
                      
                      - 不断学习 为项目注入新血液 当然合适才是最好
                      
                      - 总结反思
                  






